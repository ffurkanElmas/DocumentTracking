@model DokumanModulu.Entity.DocumentTracking
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUserId = User.Identity.GetUserId();
}

<div class="container mt-5">
    <h2><i class="fa fa-plus" aria-hidden="true"></i> DOKÜMAN EKLE</h2>

    @using (Html.BeginForm("Create", "DocumentTracking", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.Hidden("CreatedUserId", currentUserId)

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Klasör Seç", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SelectedFolder", new SelectList(ViewBag.Folders as System.Collections.IEnumerable), "Klasör Seç", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Yeni Klasör Adı", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" name="NewFolderName" class="form-control" />
                    <i class="fa fa-info-circle" aria-hidden="true"></i> Dosyayı yeni bir klasöre eklemek istiyorsanız yukarıda seçim yapmadan bu bölüme klasör adını yazınız.
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Dosya Yolu", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="file" class="form-control" />
                    @Html.ValidationMessageFor(model => model.Path, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Path)
                </div>
            </div>

            <div class="form-group mb-5 ">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Kaydet" class="btn btn-success mr-2" />
                    <a href="@Url.Action("Index", "DocumentTracking")" class="btn btn-primary">Geri Dön</a>
                </div>
            </div>
        </div>
    }

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <strong>Hata:</strong>
            @foreach (var modelState in ViewData.ModelState.Values)
            {
                foreach (var error in modelState.Errors)
                {
                    <p>@error.ErrorMessage</p>
                }
            }
        </div>
    }
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    $(document).ready(function () {
        $('form').submit(function (e) {
            var selectedFolder = $('select[name="SelectedFolder"]').val();
            var newFolderName = $('input[name="NewFolderName"]').val();

            if ((selectedFolder === "" && newFolderName === "") || (selectedFolder !== "" && newFolderName !== "")) {
                e.preventDefault();
                alert("Yeni klasör adı veya mevcut klasör seçilmelidir. Hem yeni klasör adı hem de mevcut klasör seçilmemelidir.");
                return false;
            }
        });
    });
</script>
